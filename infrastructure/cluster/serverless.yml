---
service: list-users-cluster

frameworkVersion: '^2.x'

provider:
  name: aws
  stage: ${opt:env, 'dev'}
  region: ${opt:region, 'us-east-1'}

resources:
  Resources:
    ListUsersRepository:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: cognito-list-users

    ListUsersEcsCluster:
      Type: AWS::ECS::Cluster

    ListUsersSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
          GroupDescription: Allow http to client host
          VpcId:
            Fn::ImportValue: VPC
          SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 8080
            ToPort: 8080
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
          - IpProtocol: '-1'
            FromPort: 0
            ToPort: 0
            CidrIp: 0.0.0.0/0

    ListUsersApplicationLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        IpAddressType: ipv4
        Scheme: internet-facing
        SecurityGroups:
          - !Ref ListUsersSecurityGroup
        Subnets:
          - Fn::ImportValue: PublicSubnet1AZ1
          - Fn::ImportValue: PublicSubnet1AZ2
        Type: application


  Outputs:
    ListUsersEcsClusterExport:
      Description: A reference to the created ECS Cluster
      Value: !Ref ListUsersEcsCluster
      Export:
        Name: ListUsersEcsCluster

    ListUsersSecurityGroupExport:
      Description: A reference to the created SG
      Value: !Ref ListUsersSecurityGroup
      Export:
        Name: ListUsersSecurityGroup

    ListUsersApplicationLoadBalancerArnExport:
      Description: A reference to the created ALB
      Value: !Ref ListUsersApplicationLoadBalancer
      Export:
        Name: ListUsersApplicationLoadBalancer